// corrigir-brazil-top.js
const mongoose = require('mongoose');
require('dotenv').config();

// Pre√ßos espec√≠ficos para Brazil Top Selected Categories
const PRECOS_BRAZIL_TOP = {
    // SMALL - baseado na p√°gina 1 do PDF
    'Small': {
        'Hereford': 89,
        'Palomino': 89,
        'Brindle Medium': 89,
        'Brindle White Belly': 99,
        'Champagne': 99,
        'Taupe': 99,
        'Black & White': 119,
        'Salt & Pepper': 119,
        'Brindle White Backbone': 119,
        'Grey': 139,
        'Brindle Light': 139,
        'DEFAULT': 109  // Pre√ßo m√©dio para Small n√£o listados
    },
    
    // MEDIUM LARGE - baseado na p√°gina 2 do PDF
    'Medium Large': {
        'Hereford': 119,
        'Palomino': 119,
        'Brindle White Belly': 129,
        'Black & White': 149,
        'Taupe': 149,
        'Brindle White Backbone': 159,
        'Champagne': 169,
        'Salt & Pepper': 179,
        'Brown & White': 189,
        'Grey': 199,
        'Brindle Grey': 219,
        'DEFAULT': 149  // Pre√ßo m√©dio para ML
    },
    
    // EXTRA LARGE - baseado na p√°gina 2 do PDF
    'Extra Large': {
        'Hereford': 129,
        'Palomino': 129,
        'Brindle White Belly': 139,
        'Black & White': 159,
        'Taupe': 159,
        'Brindle White Backbone': 169,
        'Champagne': 179,
        'Salt & Pepper': 189,
        'Brown & White': 199,
        'Grey': 209,
        'Brindle Grey': 229,
        'DEFAULT': 159  // Pre√ßo m√©dio para XL
    }
};

async function corrigirPrecos() {
    try {
        await mongoose.connect(process.env.MONGODB_URI);
        const PhotoCategory = require('./src/models/PhotoCategory');
        
        // Buscar categorias Brazil Top Selected sem pre√ßo
        const categorias = await PhotoCategory.find({ 
            displayName: /Brazil Top Selected Categories/i,
            basePrice: 0
        });
        
        console.log(`üìä Encontradas ${categorias.length} categorias Brazil Top Selected sem pre√ßo\n`);
        
        let atualizadas = 0;
        
        for (const cat of categorias) {
            const nome = cat.displayName;
            let preco = null;
            let tamanho = '';
            
            // Identificar tamanho
            if (nome.includes('‚Üí Small ‚Üí')) {
                tamanho = 'Small';
            } else if (nome.includes('‚Üí Medium Large ‚Üí')) {
                tamanho = 'Medium Large';
            } else if (nome.includes('‚Üí Extra Large ‚Üí')) {
                tamanho = 'Extra Large';
            }
            
            if (tamanho && PRECOS_BRAZIL_TOP[tamanho]) {
                // Procurar pre√ßo espec√≠fico
                const ultimaParte = nome.split('‚Üí').pop().trim();
                
                for (const [padrao, valor] of Object.entries(PRECOS_BRAZIL_TOP[tamanho])) {
                    if (padrao !== 'DEFAULT' && ultimaParte.includes(padrao)) {
                        preco = valor;
                        break;
                    }
                }
                
                // Se n√£o encontrou, usar default
                if (!preco) {
                    preco = PRECOS_BRAZIL_TOP[tamanho].DEFAULT;
                }
                
                // Atualizar
                cat.basePrice = preco;
                await cat.save();
                console.log(`‚úÖ ${ultimaParte} (${tamanho}): $${preco}`);
                atualizadas++;
            }
        }
        
        // Corrigir tamb√©m Colombian X-Large (estava pegando pre√ßo de Large)
        const colombianXL = await PhotoCategory.find({
            displayName: /Colombian.*X-Large/i
        });
        
        for (const cat of colombianXL) {
            if (cat.basePrice === 115) {  // Pre√ßo errado
                cat.basePrice = 119;  // Pre√ßo correto
                await cat.save();
                console.log(`‚úÖ CORRIGIDO: ${cat.displayName.split('‚Üí').pop()} ‚Üí $119`);
                atualizadas++;
            }
        }
        
        console.log(`\n‚úÖ Total atualizado: ${atualizadas} categorias`);
        process.exit(0);
        
    } catch (error) {
        console.error('Erro:', error);
        process.exit(1);
    }
}

corrigirPrecos();
