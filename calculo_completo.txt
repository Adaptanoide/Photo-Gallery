            precoUnitario = priceResult.finalPrice;
            fonte = priceResult.appliedRule;

            // Preparar detalhes para exibição
            if (fonte === 'custom-client') {
                detalheRegra = {
                    tipo: 'Custom Client',
                    cliente: priceResult.ruleDetails?.clientName || cart.clientName,
                    faixa: priceResult.ruleDetails?.appliedRange ?
                        `${priceResult.ruleDetails.appliedRange.min}-${priceResult.ruleDetails.appliedRange.max || '+'} itens` :
                        'Preço especial',
                    preco: precoUnitario,
                    exceeded: priceResult.ruleDetails?.exceeded || false
                };
                console.log(`   💎 Custom Client: ${detalheRegra.cliente}`);
                console.log(`      Faixa: ${detalheRegra.faixa} = $${precoUnitario}/item`);
                if (detalheRegra.exceeded) {
                    console.log(`      ⚠️ Quantidade excede faixa - mantendo melhor preço`);
                }
            }
            else if (fonte === 'volume-discount') {
                detalheRegra = {
                    tipo: 'Volume Discount',
                    faixa: priceResult.ruleDetails?.appliedRange ?
                        `${priceResult.ruleDetails.appliedRange.min}-${priceResult.ruleDetails.appliedRange.max || '+'} itens` :
                        'Desconto por volume',
                    preco: precoUnitario,
                    exceeded: priceResult.ruleDetails?.exceeded || false
                };
                console.log(`   📦 Volume Discount (All Regular Clients)`);
                console.log(`      Faixa: ${detalheRegra.faixa} = $${precoUnitario}/item`);
                if (detalheRegra.exceeded) {
                    console.log(`      ⚠️ Quantidade excede faixa - mantendo melhor preço`);
                }
            }
            else if (fonte === 'custom-price' || fonte === 'custom-percent') {
                detalheRegra = {
                    tipo: 'Custom Client (Legacy)',
                    cliente: cart.clientName,
                    preco: precoUnitario
                };
                console.log(`   💎 Custom Client (Legacy): $${precoUnitario}/item`);
            }
            else {
                detalheRegra = {
                    tipo: 'Base Price',
                    preco: precoUnitario
                };
                console.log(`   💰 Base Price: $${precoUnitario}/item`);
            }

        } catch (error) {
            console.log(`   ⚠️ Erro ao calcular preço, usando base: ${error.message}`);
            precoUnitario = category.basePrice || 0;
            fonte = 'base-price';
            detalheRegra = {
                tipo: 'Base Price (Fallback)',
                preco: precoUnitario
            };
        }

        // Calcular subtotal desta categoria
        const subtotalCategoria = quantidade * precoUnitario;
        grandTotal += subtotalCategoria;
        totalComDesconto += subtotalCategoria;

        console.log(`   📊 Subtotal: ${quantidade} × $${precoUnitario} = $${subtotalCategoria}`);

        // Guardar detalhes
        detalhes.push({
            categoria: categoryPath,
            quantidade: quantidade,
            precoUnitario: precoUnitario,
            subtotal: subtotalCategoria,
            fonte: fonte,
            regra: detalheRegra
        });
    }

    // Calcular desconto total
    const descontoTotal = subtotal - totalComDesconto;
    const percentualDesconto = subtotal > 0 ? Math.round((descontoTotal / subtotal) * 100) : 0;

    console.log(`\n💵 TOTAIS:`);
    console.log(`   Subtotal original: $${subtotal}`);
    console.log(`   Total com desconto: $${totalComDesconto}`);
    console.log(`   Economia: $${descontoTotal} (${percentualDesconto}%)`);

    return {
        rule: {
            detalhes: detalhes,
            totalCategories: totalCategories
        },
        discountPercent: percentualDesconto,
        discountAmount: descontoTotal,
        fixedPrice: null,
        ruleType: 'per-category',
        description: `Cálculo por categoria (${totalCategories} categoria${totalCategories > 1 ? 's' : ''})`,
        source: 'category-based',
        finalTotal: totalComDesconto,
        detalhesCompletos: detalhes
    };
};

// ===== MIDDLEWARE DE VALIDAÇÃO =====

// Validar sessionId
const validateSessionId = (req, res, next) => {
    const sessionId = req.params.sessionId || req.body.sessionId;

    if (!sessionId || typeof sessionId !== 'string' || sessionId.length < 10) {
        return res.status(400).json({
            success: false,
            message: 'SessionId inválido ou não fornecido'
        });
    }

    req.sessionId = sessionId;
    next();
};

// Validar dados de cliente
const validateClientData = (req, res, next) => {
    const {
        sessionId, clientCode, clientName, driveFileId,
        fileName, category, thumbnailUrl,
        price, formattedPrice, hasPrice
    } = req.body;

    if (!clientCode || typeof clientCode !== 'string' || clientCode.length !== 4) {
        return res.status(400).json({
